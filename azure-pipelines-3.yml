# File: .azure/pipelines/release-pipeline.yml
resources:
  pipelines:
    - pipeline: ChatAppBuild      # an alias you give it
      source: Build Pipeline       # <-- the *name* of your Build pipeline in Azure DevOps
      trigger: true               # auto-trigger whenever that pipeline succeeds

pool:
  name: remote-agrnt-pool

variables:
  SSH_CONNECTION: 'backendvm-ssh'
  APP_DIR: '/app'
  SERVICE_NAME: 'chatapp.service'

stages:
- stage: Deploy
  displayName: 'Deploy ChatApp'
  jobs:
  - job: PushAndDeploy
    displayName: Copy & Deploy ChatApp
    steps:

      # Download the artifact from the Build pipeline
      - download: ChatAppBuild
        artifact: chatapp-code

      # Copy code to the target VM
      - task: CopyFilesOverSSH@0
        displayName: Copy code to $(APP_DIR)
        inputs:
          sshEndpoint: $(SSH_CONNECTION)
          sourceFolder: '$(Pipeline.Workspace)/ChatAppBuild/chatapp-code'
          contents: '**'
          targetFolder: '$(APP_DIR)'

      # Install requirements
      - task: SSH@0
        displayName: Install requirements
        inputs:
          sshEndpoint: $(SSH_CONNECTION)
          runOptions: 'inline'
          inline: |
            cd $(APP_DIR)
            source venv/bin/activate
            pip3 install -r requirements.txt
            deactivate

      # Run migrations
      - task: SSH@0
        displayName: Run Django migrations
        inputs:
          sshEndpoint: $(SSH_CONNECTION)
          runOptions: 'inline'
          inline: |
            cd $(APP_DIR)
            source venv/bin/activate
            cd fundoo
            python3 manage.py migrate
            deactivate

      # Restart the service
      - task: SSH@0
        displayName: Restart chatapp service
        inputs:
          sshEndpoint: $(SSH_CONNECTION)
          runOptions: 'inline'
          inline: |
            sudo systemctl restart $(SERVICE_NAME)
