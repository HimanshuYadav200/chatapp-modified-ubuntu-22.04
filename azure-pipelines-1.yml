trigger:
  - main

pool:
  name: remote-agent   # <-- your self-hosted agent pool

variables:
  SSH_CONNECTION: 'backendvm-ssh'   # the name of your SSH service connection
  APP_DIR:        '/app'            # where your app lives on the VM
  SERVICE_NAME:   'chatapp.service' # your systemd service name

stages:
- stage: Deploy
  displayName: Deploy to Backend VM
  jobs:
  - job: PushAndDeploy
    displayName: Copy & Deploy ChatApp
    steps:

    # 1) Checkout your code
    - checkout: self

    # 2) Copy all files to the VM
    - task: SSH@0
      displayName: Copy code to $(APP_DIR)
      inputs:
        sshEndpoint: $(SSH_CONNECTION)
        runOptions: scp
        sourceFolder: '$(Build.SourcesDirectory)'
        targetFolder: '$(APP_DIR)'

    # 3) Ensure the virtualenv exists (bootstrap if needed)
    - task: SSH@0
      displayName: Ensure Python venv exists
      inputs:
        sshEndpoint: $(SSH_CONNECTION)
        runOptions: inline
        inline: |
          set -e
          cd $(APP_DIR)
          if [ ! -d venv ]; then
            echo "Creating Python virtualenv…"
            python3 -m venv venv
          else
            echo "Python virtualenv already present."
          fi

    # 4) Install pip requirements inside venv
    - task: SSH@0
      displayName: Install Python dependencies
      inputs:
        sshEndpoint: $(SSH_CONNECTION)
        runOptions: inline
        inline: |
          set -e
          cd $(APP_DIR)
          echo "Activating venv and installing requirements…"
          source venv/bin/activate
          pip install -r requirements.txt
          deactivate

    # 5) Run Django migrations
    - task: SSH@0
      displayName: Run Django migrations
      inputs:
        sshEndpoint: $(SSH_CONNECTION)
        runOptions: inline
        inline: |
          set -e
          cd $(APP_DIR)/fundoo
          echo "Activating venv and migrating…"
          source ../venv/bin/activate
          python3 manage.py makemigrations
          python3 manage.py migrate
          deactivate

    # 6) Restart systemd service
    - task: SSH@0
      displayName: Restart chatapp service
      inputs:
        sshEndpoint: $(SSH_CONNECTION)
        runOptions: inline
        inline: |
          echo "Restarting $(SERVICE_NAME)…"
          sudo systemctl restart $(SERVICE_NAME)
